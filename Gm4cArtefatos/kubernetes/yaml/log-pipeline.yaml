kind: "Deployment"
apiVersion: "apps/v1"
metadata:
  name: elastic-search
spec:
  replicas: 1
  minReadySeconds: 30
  selector:
    matchLabels: 
      name: "elastic-search"
  template:
    metadata:
      labels:
        name: "elastic-search"
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      containers:
      - name: elastic-search
        image: elasticsearch:6.5.3
        livenessProbe:
          tcpSocket:
            port: 9200
          initialDelaySeconds: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 0.25
          limits:
            cpu: 1
        ports:
        -
          containerPort: 9200
          protocol: "TCP"
          name: http
        -
          containerPort: 9300
          protocol: "TCP"
        volumeMounts:
        - name: elastic-data
          mountPath: /usr/share/elasticsearch/data
        env:
        - name: discovery.type
          value: "single-node"
        - name: ES_JAVA_OPTS
          value: -Xms256m -Xmx256m
        - name: network.host
          valueFrom:
            fieldRef:
             fieldPath: status.podIP
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
      volumes:
      - name: elastic-data
        hostPath:
          path: /root/volumes/elasticsearch
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-svc
spec:
  selector:
    name: elastic-search
  ports:
    -
      name: http-1
      protocol: TCP
      port: 9200
    -
      name: http-2
      protocol: TCP
      port: 9300
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service-ext
spec:
  selector:
    name: elastic-search
  type: NodePort
  ports:
    -
      name: http-1
      protocol: TCP
      port: 9200
      nodePort: 31200
    -
      name: http-2
      protocol: TCP
      port: 9300
      nodePort: 31301
---
kind: "Deployment"
apiVersion: "apps/v1"
metadata:
  name: kibana
spec:
  replicas: 1
  minReadySeconds: 30
  selector:
    matchLabels: 
      name: "kibana"
  template:
    metadata:
      labels:
        name: "kibana"
    spec:
      initContainers:
      - name: init-wso2-elasticsearch-service
        image: busybox
        command: ['sh', '-c', 'until nslookup elasticsearch-svc; do echo waiting for elasticsearch-svc; sleep 2; done;']
      containers:
      - name: kibana
        image: kibana:6.5.3
        #livenessProbe:
        #  tcpSocket:
        #    port: 5601
        #  initialDelaySeconds: 20
        #  periodSeconds: 5
        #readinessProbe:
        #  httpGet:
        #    path: /api/status
        #    port: http
        #  initialDelaySeconds: 10
        #  periodSeconds: 5
        imagePullPolicy: Always
        ports:
        -
          containerPort: 5601
          protocol: "TCP"
          name: http
        volumeMounts:
        - name: kibana-yml
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
             fieldPath: status.podIP
      volumes:
      - name: kibana-yml
        configMap:
          name: kibana-yml
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-svc
spec:
  selector:
    name: kibana
  ports:
    -
      name: http
      protocol: TCP
      port: 5601
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-svc-ext
spec:
  selector:
    name: kibana
  type: NodePort
  ports:
    -
      name: http
      protocol: TCP
      port: 5601
      nodePort: 31601
#---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: wso2-kibana-ingress
#  annotations:
#    kubernetes.io/ingress.class: "nginx"
#spec:
#  rules:
#  - host: wso2-kibana
#    http:
#      paths:
#      - path: /
#        backend:
#          serviceName: wso2-kibana-service
#          servicePort: 5601

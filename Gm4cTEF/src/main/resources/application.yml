server:
  port: 8080
spring:
  redis:
    host: redis-svc
    port: 6379
  boot:
    admin:
      client:
        url: http://spring-admin-svc:9004
        instance:
          name: Gm4cTef
          prefer-ip: true
  kafka:
    properties:
      request.timeout.ms: 20000
      retry.backoff.ms: 500
      schema.registry.url: http://kafka-svc:8081  
      specific: 
        avro: 
          reader: true
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: kafka-svc:9092
      group-id: tef-groupid
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema:
          registry:
            url: http://kafka-svc:8081
    producer:
      bootstrap-servers: kafka-svc:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema:
          registry:
            url: http://kafka-svc:8081
  data:
    cassandra:
      contact-points: cassandra-svc
      username: cassandra
      password: cassandra
      keyspace-name: tef
      port: 9042
      schema-action: CREATE_IF_NOT_EXISTS
management:
  gm4c: 
     name: Gm4cTef
  health: 
    package: com.gm4c.healthcheck
    kafka:
      enabled: false
      bootstrap-servers: kafka-svc:9092,kafka-svc:9091,kafka-svc:9093
      read-timepout:  200
      threshold:  600
      topic:  log-brokers
    cassandra:
      enabled: false
      level: 2
      threshold:  600
      query:  'SELECT release_version from system.local'
      url: http://cassandra-svc:9042
    redis:
      enabled: false
      threshold: 600
      query: "TBD"
    limite:
      enabled: true
      level: 2
      threshold:  600
      url: http://limite:8080
      topic-req: tef
    conta:
      enabled: true
      level: 2
      threshold:  600
      url: http://conta:8080
      topic-req: tef
    senha:
      enabled: true
      level: 2
      threshold:  600
      url: http://senha:8080
      topic-req: tef
    dependencies:
    - name: limite
      enabled: true
      level: 2
      threshold:  600
      url: http://limite:8080
      topicreq: tef
    - name: conta
      enabled: true
      level: 2
      threshold:  600
      url: http://conta:8080
      topicreq: tef
    - name: senha
      enabled: true
      level: 2
      threshold:  600
      url: http://senha:8080
      topicreq: tef
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health: 
      enabled: true
      show-details: always
      group:
        healthcustom:
          include: '*'
        tefhealthcustom:
          include: '*'
  metrics:
    export:
      prometheus:
        enabled: true 
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'
  trace:
    enabled: true
opentracing:
  jaeger:
    udp-sender:
      host: jaeger-svc
      port: 6831
    const-sampler:
      decision: true
    log-spans: false
    service-name: TEF
